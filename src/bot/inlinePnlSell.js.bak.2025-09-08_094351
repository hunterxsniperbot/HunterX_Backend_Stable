export default function registerInlinePnlSell(bot){
  console.log("‚úÖ inlinePnlSell listo (pnl/sell callbacks)");

  async function demoSellViaApi({ tradeId, pct }){
    const q = new URLSearchParams({ mode:"demo", pct:String(pct), tradeId:String(tradeId||"") });
    const url = `http://127.0.0.1:3000/api/sell?${q.toString()}`;
    const res = await fetch(url, { method:"POST" }).catch(e=>({ ok:false, statusText:String(e?.message||e) }));
    if (!res?.ok) throw new Error(`API /api/sell DEMO fall√≥ (${res?.status||"?"} ${res?.statusText||""})`);
    const j = await res.json().catch(()=>({ ok:true }));
    return j;
  }

  bot.on("callback_query", async (q) => {
    try{
      const data = String(q.data||"");
      if (!data.startsWith("hxv1|")) return;

      const [prefix, action, uid, tradeId, extra] = data.split("|");
      const chatId = q.message?.chat?.id;
      const msgId  = q.message?.message_id;

      if (action === "pnl") {
        // Placeholder: refresco visual
        await bot.answerCallbackQuery(q.id, { text: "üìä PnL actualizado (DEMO)", show_alert:false });
        return;
      }

      if (action === "sell") {
        const pct = Number(extra||0);
        await bot.answerCallbackQuery(q.id, { text: `‚úÇÔ∏è Vendiendo ${pct}% (DEMO)‚Ä¶`, show_alert:false });

        // üíØ ‚Üí API cierre total DEMO (si tu API lo soporta por tradeId+ pct=100)
        // 25/50/75 ‚Üí idem (DEMO parciales)
        try{
          await demoSellViaApi({ tradeId, pct });
        } catch(e) {
          // Si la API no soporta parciales, prob√° fallback: pct=100 como demo
          if (pct !== 100) {
            try { await demoSellViaApi({ tradeId, pct:100 }); }
            catch(e2){ /* ignoro */ }
          }
        }

        // Edito el mensaje agregando un pie "venta parcial ejecutada" (no bloqueo si falla)
        try {
          const html = (q.message?.text || q.message?.caption || q.message?.html_text || q.message?.entities) ? (q.message.text || q.message.caption) : q.message?.text;
          const stamp = new Date().toLocaleString();
          const extraNote = `\n\n‚úÇÔ∏è <b>VENTA PARCIAL EJECUTADA</b>\n<b>Trade ID:</b> #${tradeId} ‚Ä¢ <b>Vendido:</b> ${pct}% ‚Ä¢ <b>Hora:</b> ${stamp}`;
          await bot.editMessageText((html||"") + extraNote, {
            chat_id: chatId,
            message_id: msgId,
            parse_mode: "HTML",
            disable_web_page_preview: true
          });
        } catch {}

        await bot.answerCallbackQuery(q.id, { text: `‚úÖ Venta ${pct}% ejecutada (DEMO)`, show_alert:false });
        return;
      }
    } catch(e){
      console.error("[inlinePnlSell] error:", e?.message||e);
      try { await bot.answerCallbackQuery(q.id, { text: "‚ùå Error", show_alert:true }); } catch(_) {}
    }
  });
}
